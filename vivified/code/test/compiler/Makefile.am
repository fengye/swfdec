check-local: $(top_builddir)/vivified/code/vivi-compile
	RESULT=""; \
	for file in $(srcdir)/*.as; do \
	  echo "$$file ..." && $(top_builddir)/vivified/code/vivi-compile -a $$file | diff -u $$file.expect - || RESULT="$$RESULT $$file"; \
	done; \
	if test "x$$RESULT" == "x"; then \
	  echo "OK"; \
	else \
	  echo "FAILED:"; \
	  for fail in $$RESULT; do \
	    echo "  $$fail"; \
	  done; \
	  exit 1; \
	fi

EXTRA_DIST = \
	and.as \
	and.as.expect \
	array_literal.as \
	array_literal.as.expect \
	array_literal_empty.as \
	array_literal_empty.as.expect \
	array_literal_missing_values.as \
	array_literal_missing_values.as.expect \
	asm-arguments.as \
	asm-arguments.as.expect \
	asm_default.as \
	asm_default.as.expect \
	asm_empty.as \
	asm_empty.as.expect \
	asm_get_url2.as \
	asm_get_url2.as.expect \
	asm_if.as \
	asm_if.as.expect \
	asm_jump.as \
	asm_jump.as.expect \
	asm_label.as \
	asm_label.as.expect \
	asm_pool.as \
	asm_pool.as.expect \
	asm_push.as \
	asm_push.as.expect \
	asm_store.as \
	asm_store.as.expect \
	asm_try.as \
	asm_try.as.expect \
	assignment.as \
	assignment.as.expect \
	assignment_member.as \
	assignment_member.as.expect \
	assignment_member_value.as \
	assignment_member_value.as.expect \
	assignment_operator.as \
	assignment_operator.as.expect \
	assignment_value.as \
	assignment_value.as.expect \
	automatic_semicolon.as \
	automatic_semicolon.as.expect \
	bitwise_not.as \
	bitwise_not.as.expect \
	builtin_call.as \
	builtin_call.as.expect \
	builtin_statement.as \
	builtin_statement.as.expect \
	break.as \
	break.as.expect \
	break_continue_label.as \
	break_continue_label.as.expect \
	call_function.as \
	call_function.as.expect \
	combine_push.as \
	combine_push.as.expect \
	comment.as \
	comment.as.expect \
	conditional.as \
	conditional.as.expect \
	continue.as \
	continue.as.expect \
	decrement.as \
	decrement.as.expect \
	do_while.as \
	do_while.as.expect \
	empty.as \
	empty.as.expect \
	empty_block.as \
	empty_block.as.expect \
	empty_statement.as \
	empty_statement.as.expect \
	enumerate.as \
	enumerate.as.expect \
	enumerate_local.as \
	enumerate_local.as.expect \
	enumerate_member.as \
	enumerate_member.as.expect \
	for.as \
	for.as.expect \
	for_local.as \
	for_local.as.expect \
	function_call.as \
	function_call.as.expect \
	function_call_arguments.as \
	function_call_arguments.as.expect \
	function_call_get_member.as \
	function_call_get_member.as.expect \
	function_call_returned.as \
	function_call_returned.as.expect \
	function_declaration.as \
	function_declaration.as.expect \
	function_expression.as \
	function_expression.as.expect \
	get_url.as \
	get_url.as.expect \
	if.as \
	if.as.expect \
	if_else.as \
	if_else.as.expect \
	increment.as \
	increment.as.expect \
	increment_member.as \
	increment_member.as.expect \
	increment_member_value.as \
	increment_member_value.as.expect \
	increment_value.as \
	increment_value.as.expect \
	label.as \
	label.as.expect \
	misc_literal.as \
	misc_literal.as.expect \
	not.as \
	not.as.expect \
	number.as \
	number.as.expect \
	operator.as \
	operator.as.expect \
	operator_precedence.as \
	operator_precedence.as.expect \
	object_literal.as \
	object_literal.as.expect \
	object_literal_empty.as \
	object_literal_empty.as.expect \
	or.as \
	or.as.expect \
	string.as \
	string.as.expect \
	trace.as \
	trace.as.expect \
	try.as \
	try.as.expect \
	try_no_catch.as \
	try_no_catch.as \
	try_no_finally.as.expect \
	try_no_finally.as.expect \
	unary_minus.as \
	unary_minus.as.expect \
	unary_plus.as \
	unary_plus.as.expect \
	var.as \
	var.as.expect \
	while.as \
	while.as.expect
